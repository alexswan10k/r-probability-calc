{"version":3,"sources":["webpack:///./src/components/validation.ts","webpack:///./src/components/Calculator.tsx"],"names":["createError","s","type","value","__assign","Object","assign","t","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","getProbFn","Selector","_a","setValue","Select","onChange","v","console","log","target","children","selected","ProbabilityInput","NumberInput","size","step","defaultValue","min","max","parseFloat","mode","setMode","_b","a","setA","_c","b","setB","probFn","validationResult","isValid","Grid","templateColumns","gap","Text","Alert","status"],"mappings":"4MAAIA,EAAc,SAAUC,GAAK,MAAO,CAAGC,KAAM,QAASC,MAAOF,ICA7DG,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIN,EAAGO,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTX,EAAIS,UAAUF,GACOH,OAAOQ,UAAUC,eAAeC,KAAKd,EAAGW,KACzDL,EAAEK,GAAKX,EAAEW,IAEjB,OAAOL,IAEKS,MAAMC,KAAMP,YAOzB,SAASQ,EAAUjB,GACtB,OAAQA,GACJ,IAAK,YAAa,OAAO,IACzB,IAAK,QAAS,OAAO,KAG7B,IAAIkB,EAAW,SAAUC,GACrB,IAAIjB,EAAQiB,EAAGjB,MAAOkB,EAAWD,EAAGC,SACpC,OAAO,eAAMC,EAAA,EAAQlB,EAAS,CAAEmB,SAAU,SAAUC,GAAKC,QAAQC,IAAIF,GAAuB,MAAnBA,EAAEG,OAAOxB,MAAgBkB,EAAS,SAAWA,EAAS,eAAmB,CAAEO,SAAU,CAAC,cAAK,SAAUxB,EAAS,CAAED,MAAO,IAAK0B,SAAoB,UAAV1B,GAAqB,CAAEyB,SAAU,+BAA4B,GACpQ,cAAK,SAAUxB,EAAS,CAAED,MAAO,IAAK0B,SAAoB,cAAV1B,GAAyB,CAAEyB,SAAU,sCAAmC,WAAa,IAE7IE,EAAmB,SAAUV,GAC7B,IAAIjB,EAAQiB,EAAGjB,MAAOkB,EAAWD,EAAGC,SACpC,OAAO,eAAMU,EAAA,EAAa3B,EAAS,CAAE4B,KAAM,KAAMC,KAAM,IAAMC,aAAc/B,EAAOgC,IAAK,EAAGC,IAAK,EAAGb,SAAU,SAAUd,GAAK,OAA+BY,EAAX,iBAANZ,EAA0B4B,WAAW5B,GAAeA,KAAS,CAAEmB,SAAU,CAAC,cAAKG,EAAA,EAAkB,QAAI,GACtO,eAAMA,EAAA,EAAoB,CAAEH,SAAU,CAAC,cAAK,IAAwB,QAAI,GAChE,cAAK,IAAwB,QAAI,UAAY,WAAa,IAmB/D,UAjBE,WACb,IAAIR,EAAK,mBAAS,SAAUkB,EAAOlB,EAAG,GAAImB,EAAUnB,EAAG,GACnDoB,EAAK,mBAAS,IAAMC,EAAID,EAAG,GAAIE,EAAOF,EAAG,GACzCG,EAAK,mBAAS,IAAMC,EAAID,EAAG,GAAIE,EAAOF,EAAG,GACzCG,EAAS5B,EAAUoB,GACnBS,EDrCa,SAAUN,EAAGG,GAC9B,OAAIH,EAAI,GAEJA,EAAI,EADGzC,EAAY,iBAAmByC,EAAI,+BAG1CG,EAAI,GAEJA,EAAI,EADG5C,EAAY,iBAAmB4C,EAAI,+BAIvC,QC2BgBI,CAAQP,EAAGG,GAClC,OAAO,eAAMK,EAAA,EAAM7C,EAAS,CAAE8C,gBAAiB,yBAA0BC,IAAK,GAAK,CAAEvB,SAAU,CAAC,cAAKwB,EAAA,EAAM,CAAExB,SAAU,iBAAc,GAC7H,cAAKT,EAAU,CAAEhB,MAAOmC,EAAMjB,SAAUkB,QAAW,GACnD,cAAKa,EAAA,EAAM,CAAExB,SAAU,UAAO,GAC9B,cAAKE,EAAkB,CAAE3B,MAAOsC,EAAGpB,SAAUqB,QAAQ,GACrD,cAAKU,EAAA,EAAM,CAAExB,SAAU,UAAO,GAC9B,cAAKE,EAAkB,CAAE3B,MAAOyC,EAAGvB,SAAUwB,QAAQ,GACrD,cAAKO,EAAA,EAAM,CAAExB,SAAU,eAAY,GACd,UAArBmB,EACM,eAAMM,EAAA,EAAOjD,EAAS,CAAEkD,OAAQ,WAAa,CAAE1B,SAAU,CAACkB,EAAOL,EAAGG,GAAI,YAAS,GACjF,cAAKS,EAAA,EAAOjD,EAAS,CAAEkD,OAAQ,SAAW,CAAE1B,SAAUmB,EAAiB5C,aAAU,WAAa","file":"2.index.js","sourcesContent":["var createError = function (s) { return ({ type: \"error\", value: s }); };\r\nexport var isValid = function (a, b) {\r\n    if (a < 0)\r\n        return createError(\"invalid value \" + a + \". A must be between 0 and 1\");\r\n    if (a > 1)\r\n        return createError(\"invalid value \" + a + \". A must be between 0 and 1\");\r\n    if (b < 0)\r\n        return createError(\"invalid value \" + b + \". B must be between 0 and 1\");\r\n    if (b > 1)\r\n        return createError(\"invalid value \" + b + \". B must be between 0 and 1\");\r\n    // obvious refactoring opportunity here\r\n    return \"valid\";\r\n};\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { union, intersect } from \"calc\";\r\nimport { useState } from \"react\";\r\nimport { NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, Select, Grid, Text, Alert } from \"@chakra-ui/core\";\r\nimport { isValid } from \"./validation\";\r\nexport function getProbFn(s) {\r\n    switch (s) {\r\n        case \"intersect\": return intersect;\r\n        case \"union\": return union;\r\n    }\r\n}\r\nvar Selector = function (_a) {\r\n    var value = _a.value, setValue = _a.setValue;\r\n    return _jsxs(Select, __assign({ onChange: function (v) { console.log(v); v.target.value === \"a\" ? setValue(\"union\") : setValue(\"intersect\"); } }, { children: [_jsx(\"option\", __assign({ value: \"a\", selected: value === \"union\" }, { children: \"Either A or B (union)\" }), void 0),\r\n            _jsx(\"option\", __assign({ value: \"b\", selected: value === \"intersect\" }, { children: \"Combined A and B (intersect)\" }), void 0)] }), void 0);\r\n};\r\nvar ProbabilityInput = function (_a) {\r\n    var value = _a.value, setValue = _a.setValue;\r\n    return _jsxs(NumberInput, __assign({ size: \"lg\", step: 0.02, defaultValue: value, min: 0, max: 1, onChange: function (n) { return typeof n === \"string\" ? setValue(parseFloat(n)) : setValue(n); } }, { children: [_jsx(NumberInputField, {}, void 0),\r\n            _jsxs(NumberInputStepper, { children: [_jsx(NumberIncrementStepper, {}, void 0),\r\n                    _jsx(NumberDecrementStepper, {}, void 0)] }, void 0)] }), void 0);\r\n};\r\nvar Calculator = function () {\r\n    var _a = useState(\"union\"), mode = _a[0], setMode = _a[1];\r\n    var _b = useState(0.5), a = _b[0], setA = _b[1];\r\n    var _c = useState(0.5), b = _c[0], setB = _c[1];\r\n    var probFn = getProbFn(mode);\r\n    var validationResult = isValid(a, b);\r\n    return _jsxs(Grid, __assign({ templateColumns: \"1fr minmax(25rem, 3fr)\", gap: 3 }, { children: [_jsx(Text, { children: \"Function\" }, void 0),\r\n            _jsx(Selector, { value: mode, setValue: setMode }, void 0),\r\n            _jsx(Text, { children: \"A\" }, void 0),\r\n            _jsx(ProbabilityInput, { value: a, setValue: setA }, void 0),\r\n            _jsx(Text, { children: \"B\" }, void 0),\r\n            _jsx(ProbabilityInput, { value: b, setValue: setB }, void 0),\r\n            _jsx(Text, { children: \"Result\" }, void 0),\r\n            validationResult === \"valid\"\r\n                ? _jsxs(Alert, __assign({ status: \"success\" }, { children: [probFn(a, b), \" \"] }), void 0)\r\n                : _jsx(Alert, __assign({ status: \"error\" }, { children: validationResult.value }), void 0)] }), void 0);\r\n};\r\nexport default Calculator;\r\n"],"sourceRoot":""}